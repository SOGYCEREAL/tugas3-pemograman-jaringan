FILE SERVER
TUJUAN: melayani client dalam request file server

ATURAN PROTOKOL:
- client harus mengirimkan request dalam bentuk string
- string harus dalam format
  REQUEST spasi PARAMETER
- PARAMETER dapat berkembang menjadi PARAMETER1 spasi PARAMETER2 dan seterusnya
- Untuk request khusus seperti `upload`, client dapat mengirim data dalam format JSON:
  {
    "command": "upload",
    "filename": "namafile.ext",
    "filedata": "BASE64_ENCODED_DATA"
  }
- Semua response akan diberikan dalam bentuk JSON dan diakhiri
  dengan karakter ASCII code #13#10#13#10 atau "\r\n\r\n"


REQUEST YANG DILAYANI:
- informasi umum:
  * Jika request tidak dikenali akan menghasilkan pesan
    - status: ERROR
    - data: request tidak dikenali
  * Semua result akan diberikan dalam bentuk JSON dan diakhiri
    dengan character ascii code #13#10#13#10 atau "\r\n\r\n"

LIST
* TUJUAN: untuk mendapatkan daftar seluruh file yang dilayani oleh file server
* PARAMETER: tidak ada
* RESULT:
- BERHASIL:
  - status: OK
  - data: list file
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

GET
* TUJUAN: untuk mendapatkan isi file dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang diminta
  - data_file : isi file yang diminta (dalam bentuk base64)
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

Update
* TUJUAN : untuk mengirim file dari client ke server
* FORMAT: JSON (lihat aturan di atas)  
* PARAMETER (dalam JSON):  
  - command: "upload"  
  - filename: nama file  
  - filedata: isi file dalam base64
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang diminta
  - data_file : "<filename> berhasil diupload" 
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

Delete
* TUJUAN : menghapus file di server
* PARAMETER:
  - PARAMETER1 : nama file
- BERHASIL:
  - status: OK
  - data: "<nama file> berhasil dihapus."
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan